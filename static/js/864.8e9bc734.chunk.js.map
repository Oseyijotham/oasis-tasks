{"version":3,"file":"static/js/864.8e9bc734.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/TasksPastDueList/TasksPastDueList.module.css?60bb","components/TasksPastDueList/TasksPastDueList.jsx","webpack://react-homework-template/./src/components/SortedPastDueTasks/SortedPastDueTasks.module.css?6472","components/SortedPastDueTasks/icons.svg","components/SortedPastDueTasks/SortedPastDueTasks.jsx","redux/AppRedux/selectors.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"Filter_formLabel__Ozoh5\",\"formInput\":\"Filter_formInput__XNLZn\",\"contactsList\":\"Filter_contactsList__78f6h\",\"contactsData\":\"Filter_contactsData__q4ogS\",\"contactsItem\":\"Filter_contactsItem__CHFiw\",\"contactsPhone\":\"Filter_contactsPhone__hxyN-\",\"contactsButtonArea\":\"Filter_contactsButtonArea__0a5PO\",\"contactsButton\":\"Filter_contactsButton__7e+W-\",\"checkbox\":\"Filter_checkbox__wp-8y\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown\n} from '../../redux/AppRedux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/AppRedux/filterSlice';\nimport {\n  deleteContact,\n  openModal,\n  fetchContactById\n} from '../../redux/AppRedux/operations';\n\nexport const Filter = () => {\n  const searchTermId = nanoid();\n  const contacts = useSelector(selectContacts);\n  const filterUpper = useSelector(selectFilterUp);\n  const filterLower = useSelector(selectFilterDown);\n  const filterValue = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  const handleSearch = event => {\n    dispatch(setFilter(event.target.value));\n    console.log(event.target.value);\n  };\n  const bestMatches = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n      filterValue.trim() !== ''\n  );\n\n  const handleModalOpen = evt => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchContactById(id));\n      dispatch(openModal());\n    }\n  };\n\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    //console.log(evt.target.name);\n    dispatch(deleteContact(evt.target.name));\n    /*//dispatch(closeModal());\n    const exist = contacts.find(contact => contact._id === evt.target.name);\n    console.log(contacts);\n    if (exist === undefined) {\n      console.log('gvghi');\n      dispatch(closeModal());\n    }*/\n  };\n\n  return (\n    <div className={css.contactList}>\n      <label htmlFor={searchTermId}>\n        <span className={css.formLabel}>Search Tasks By Title:</span>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Task title\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Enter Task Title\"\n          required\n          onChange={handleSearch}\n          id={searchTermId}\n          autoComplete=\"off\"\n          className={css.formInput}\n          value={filterValue}\n        />\n      </label>\n\n      {filterValue !== '' && bestMatches.length !== 0 && (\n        <ul className={css.contactsList}>\n          {bestMatches.map(contact => {\n            const myindex = bestMatches.indexOf(contact);\n            if (myindex >= filterLower && myindex < filterUpper) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input type=\"checkbox\" className={css.checkbox} />:{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"TasksPastDueList_notification__rhP1T\",\"contactsSection\":\"TasksPastDueList_contactsSection__RCfyo\",\"contactsTitle\":\"TasksPastDueList_contactsTitle__-R4qv\",\"contactsList\":\"TasksPastDueList_contactsList__dIWBg\",\"contactsListAlt\":\"TasksPastDueList_contactsListAlt__TL67L\",\"contactsData\":\"TasksPastDueList_contactsData__MIgOw\",\"contactsPhone\":\"TasksPastDueList_contactsPhone__84Ixl\",\"contactsItemWrapper\":\"TasksPastDueList_contactsItemWrapper__fxSg0\",\"contactsItem\":\"TasksPastDueList_contactsItem__l4X32\",\"contactsDetails\":\"TasksPastDueList_contactsDetails__tjDb+\",\"contactsName\":\"TasksPastDueList_contactsName__mY1rN\",\"checkbox\":\"TasksPastDueList_checkbox__rCtF8\",\"contactsButtonArea\":\"TasksPastDueList_contactsButtonArea__Ed1NO\",\"contactsButton\":\"TasksPastDueList_contactsButton__a5wIU\",\"navigationArea\":\"TasksPastDueList_navigationArea__qAxYA\",\"navigationButton\":\"TasksPastDueList_navigationButton__uJWhh\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown,\n  selectError,\n  selectIsLoading,\n} from '../../redux/AppRedux/selectors';\nimport {\n  deleteContact,\n  openSortedPastDueModal,\n  fetchSortedPastDueContactById,\n  handleFilterFowardUp,\n  handleFilterFowardDown,\n  handleFilterBackwardUp,\n  handleFilterBackwardDown,\n  updateStatus,\n} from '../../redux/AppRedux/operations';\nimport css from './TasksPastDueList.module.css';\nexport const TasksPastDueList = ({ children }) => {\n  const contacts = useSelector(selectContacts);\n  const filterUp = useSelector(selectFilterUp);\n  const filterDown = useSelector(selectFilterDown);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  //const [taskStatus, setTaskStatus] = useState();\n  //let myContacts  \n  const dispatch = useDispatch();\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    //console.log(evt.target.name);\n    dispatch(deleteContact(evt.target.name));\n    /*//dispatch(closeModal());\n    const exist = contacts.find(contact => contact._id === evt.target.name);\n    console.log(contacts);\n    if (exist === undefined) {\n      console.log('gvghi');\n      dispatch(closeModal());\n    }*/\n    \n  };\n  const filterValue = useSelector(selectContactsFilter);\n\n  const handleModalOpen = (evt) => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchSortedPastDueContactById(id));\n      dispatch(openSortedPastDueModal());\n    }\n  };\n  const [lowerLimit, setLowerLimit] = useState(0);\n  const [upperLimit, setUpperLimit] = useState(4);\n\n\n  const handleForward = (evt) => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit + 4);\n      setUpperLimit(upperLimit + 4);\n    \n    /*if (filterValue !== \"\") {\n      console.log(\"OK\")\n      const str = filterUp;\n      const sto = filterDown\n      dispatch(handleFilterFowardUp(str));\n      dispatch(handleFilterFowardDown(sto));\n    }*/\n  }\n\n  const handleBackward = (evt) => {\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit - 4);\n      setUpperLimit(upperLimit - 4);\n    \n    /*if (filterValue !== '') {\n      const str1 = filterUp;\n      const sto1 = filterDown;\n       dispatch(handleFilterBackwardUp(str1));\n       dispatch(handleFilterBackwardDown(sto1));\n     }*/\n  };\n  \n  const handleChange = (evt) => {\n    dispatch(updateStatus({ status: evt.target.checked, myUpdateStatusId:evt.target.name}));\n  }\n  \n   const bestMatches = contacts.filter(\n     contact =>\n       contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n       filterValue.trim() !== ''\n  );\n  \n  const pastDueRay = contacts.filter(\n    (contact) => {\n      const nowSortDate = new Date();\n      //return contact.status === false;\n      return nowSortDate > new Date(contact.phone);\n    }\n  );\n\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>Past Due Tasks</h3>\n      {children}\n\n      {pastDueRay.length === 0 && (\n        <div className={css.contactsListAlt}>\n          {isLoading && !error && (\n            <b className={css.notification}>Loading Tasks...</b>\n          )}\n          {!isLoading && !error && (\n            <b className={css.notification}>No Tasks Here!!!</b>\n          )}\n          {!isLoading && error && <b className={css.notification}>Error!!!</b>}\n        </div>\n      )}\n      {pastDueRay.length !== 0 && (\n        <ul className={css.contactsList}>\n          {pastDueRay.map(contact => {\n            const myindex = pastDueRay.indexOf(contact);\n            if (myindex >= lowerLimit && myindex < upperLimit) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input\n                      type=\"checkbox\"\n                      className={css.checkbox}\n                      checked={contact.status}\n                      name={contact._id}\n                      onChange={handleChange}\n                    />\n                    :{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n\n      <div className={css.navigationArea}>\n        {lowerLimit !== 0 && (\n          <button className={css.navigationButton} onClick={handleBackward}>\n            Prev\n          </button>\n        )}\n        {!(upperLimit > pastDueRay.length) &&\n          upperLimit !== pastDueRay.length && (\n            <button className={css.navigationButton} onClick={handleForward}>\n              Forward\n            </button>\n          )}\n      </div>\n\n      {filterValue !== '' && (\n        <div className={css.navigationArea}>\n          {filterDown !== 0 && (\n            <button className={css.navigationButton} onClick={handleBackward}>\n              Prev\n            </button>\n          )}\n          {/*!(filterUp > bestMatches.length) &&\n            filterUp !== bestMatches.length && (\n              <button className={css.navigationButton} onClick={handleForward}>\n                Forward\n              </button>\n            )*/}\n        </div>\n      )}\n    </div>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"SortedPastDueTasks_notification__fGX1+\",\"notificationShow\":\"SortedPastDueTasks_notificationShow__VkJvG\",\"sortedWrapper\":\"SortedPastDueTasks_sortedWrapper__FiH5h\",\"coverWrapper\":\"SortedPastDueTasks_coverWrapper__Px3GS\",\"contactsWrapperSpace\":\"SortedPastDueTasks_contactsWrapperSpace__KKRHZ\",\"selected\":\"SortedPastDueTasks_selected__8xbID\",\"contactsDetailsHide\":\"SortedPastDueTasks_contactsDetailsHide__MtRkv\",\"contactsDetailsShow\":\"SortedPastDueTasks_contactsDetailsShow__uFhp-\",\"closeModal\":\"SortedPastDueTasks_closeModal__d2BB4\",\"contactsDetailsArea\":\"SortedPastDueTasks_contactsDetailsArea__b8ig+\",\"contactImage\":\"SortedPastDueTasks_contactImage__4eYqP\",\"detailsSection\":\"SortedPastDueTasks_detailsSection__rKXcN\",\"detailsImageWrapper\":\"SortedPastDueTasks_detailsImageWrapper__OAp-1\",\"detailsImage\":\"SortedPastDueTasks_detailsImage__aOkVF\",\"detailsImageButton\":\"SortedPastDueTasks_detailsImageButton__En5+g\",\"detailsImageInput\":\"SortedPastDueTasks_detailsImageInput__VF-qL\",\"detailsSectionTitle\":\"SortedPastDueTasks_detailsSectionTitle__Okt+A\",\"detailsWrapper\":\"SortedPastDueTasks_detailsWrapper__cm1cT\",\"detailsItem\":\"SortedPastDueTasks_detailsItem__jwvuA\",\"detailsCover\":\"SortedPastDueTasks_detailsCover__uQyl8\",\"detailsInfo\":\"SortedPastDueTasks_detailsInfo__hyobB\",\"details\":\"SortedPastDueTasks_details__YaGmh\",\"detailsVal\":\"SortedPastDueTasks_detailsVal__MFmW3\",\"detailsDetailsVal\":\"SortedPastDueTasks_detailsDetailsVal__82MFv\",\"detailsValPhone\":\"SortedPastDueTasks_detailsValPhone__2sdbF\",\"detailsValInput\":\"SortedPastDueTasks_detailsValInput__voKYD\",\"detailsDetailsValInput\":\"SortedPastDueTasks_detailsDetailsValInput__8Vyn6\",\"detailsValInputPhone\":\"SortedPastDueTasks_detailsValInputPhone__XZhtt\",\"backDrop\":\"SortedPastDueTasks_backDrop__s0B4Y\",\"loader\":\"SortedPastDueTasks_loader__aU+wW\",\"detailButton\":\"SortedPastDueTasks_detailButton__g2jM6\",\"buttonWrapper\":\"SortedPastDueTasks_buttonWrapper__-QSnC\",\"detailsEditClose\":\"SortedPastDueTasks_detailsEditClose__Dral0\"};","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c0 0 0 0 0 0l-9.708-9.708 9.708-9.708c0 0 0 0 0 0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0 0 0 0 0l-9.708 9.708-9.708-9.708c0 0 0 0 0 0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c0 0 0 0 0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0 0 0 0 0 0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0v13l-5-5-6 6-3-3 6-6-5-5zM14 21l-6 6 5 5h-13v-13l5 5 6-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pause\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM10 10h4v12h-4zM18 10h4v12h-4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM12 9l12 7-12 7z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 4l20 12-20 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-tv\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.662 9.003c-2.775-0.399-5.731-0.688-8.815-0.851l5.153-5.153-2-2-7.017 7.017c-0.656-0.011-1.317-0.017-1.983-0.017v0l-8-8-2 2 6.069 6.069c-3.779 0.133-7.386 0.454-10.731 0.935-0.86 3.366-1.338 7.086-1.338 10.997s0.477 7.63 1.338 10.997c4.489 0.645 9.448 1.003 14.662 1.003s10.173-0.358 14.662-1.003c0.86-3.366 1.338-7.086 1.338-10.997s-0.477-7.63-1.338-10.997zM26.997 27.331c-3.367 0.43-7.086 0.669-10.997 0.669s-7.63-0.239-10.997-0.669c-0.645-2.244-1.003-4.724-1.003-7.331s0.358-5.087 1.003-7.331c3.366-0.43 7.086-0.669 10.997-0.669s7.63 0.239 10.996 0.669c0.645 2.244 1.004 4.724 1.004 7.331s-0.358 5.087-1.003 7.331z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-decrease\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 14h16v4h-16v-4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-increase\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 18h-6v6h-4v-6h-6v-4h6v-6h4v6h6v4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-books\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM6 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM16 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.909 5.546l-5.358 2.7c-0.491 0.247-0.691 0.852-0.443 1.343l8.999 17.861c0.247 0.491 0.852 0.691 1.343 0.443l5.358-2.7c0.491-0.247 0.691-0.852 0.443-1.343l-8.999-17.861c-0.247-0.491-0.852-0.691-1.343-0.443z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.77c8d2ef0bd65aab65a1e4f05688514c.svg\";\nexport { ForwardRef as ReactComponent };","import { TasksPastDueList } from '../TasksPastDueList/TasksPastDueList';\nimport { Filter } from '../Filter/Filter';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  closeSortedPastDueModal,\n  updateSortedPastDueContactAvatar,\n  updateSortedPastDueContactName,\n  updateSortedPastDueContactEmail,\n  updateSortedPastDueContactPhone,\n} from '../../redux/AppRedux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n  selectError,\n  selectIsLoading,\n  selectOpenSortedPastDueModal,\n  selectedSortedPastDueContact,\n  selectedIsSlideLoading,\n} from '../../redux/AppRedux/selectors';\nimport css from './SortedPastDueTasks.module.css';\nimport svg from './icons.svg';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport Flatpickr from 'react-flatpickr';\nimport 'flatpickr/dist/themes/material_blue.css';\nimport { Suspense } from 'react';\n\nexport const Contacts = () => {\n   const [date, setDate] = useState(new Date());\n  const [isNameEditing, setNameEdit] = useState(false);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [isEmailEditing, setEmailEdit] = useState(false);\n   const myContact = useSelector(selectedSortedPastDueContact);\n  const [emailValue, setEmailValue] = useState(myContact.email);\n   const [isPhoneEditing, setPhoneEdit] = useState(false);\n   const [dateValue, setDateValue] = useState('');\n  //const [idValue, setIdValue] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  //const contacts = useSelector(selectContacts);\n  const isSlideLoading = useSelector(selectedIsSlideLoading);\n \n  const error = useSelector(selectError);\n   const isOpenModal = useSelector(selectOpenSortedPastDueModal);\n const handleModalClose = () => {\n   dispatch(closeSortedPastDueModal());\n   setNameEdit(false);\n   setEmailEdit(false);\n  };\n\n  const handleNameChange = evt => { \n    setNameValue(evt.target.value);\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 45) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 45');\n      }\n    /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n  }\n\n  const handleNameEdit = evt => { \n    setNameEdit(true);\n    //const input = document.getElementById('nameInput');\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n      const input = document.querySelector('[name=\"username\"]');\n      input.focus();\n    }, 100);\n  }\n\n  const handleNameSave = evt => {\n    \n     if (nameValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch( updateSortedPastDueContactName({ name: nameValue, myUpdateId: idValue }));\n       setNameEdit(false);\n     } else if (nameValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n  };\n  \n   const handleNameEditClose = () => {\n     setNameEdit(false);\n   };\n\n    const handleEmailChange = evt => {\n      setEmailValue(evt.target.value);\n      /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 200) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 200');\n      }\n    };\n\n    const handleEmailEdit = evt => {\n      setEmailEdit(true);\n      evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n      setTimeout(() => {\n        evt.target.style.boxShadow = 'none';\n        const input = document.querySelector('[name=\"email\"]');\n        input.focus();\n      }, 100);\n  };\n\n   const handleEmailSave = evt => {\n     if (emailValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedPastDueContactEmail({ email: emailValue, myUpdateId: idValue }));\n       setEmailEdit(false);\n     } else if (emailValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n   };\n\n  const handleEmailEditClose = () => {\n    setEmailEdit(false);\n    setEmailValue(myContact.email);\n  }\n\n \n   const handlePhoneEdit = evt => {\n     setPhoneEdit(true);\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n       const input = document.querySelector('[name=\"date\"]');\n       input.focus();\n     }, 100);\n   };\n  \n  const handlePhoneSave = evt => {\n    /*if (phoneValue.trim() !== '') {*/\n    const idValue = evt.target.name;\n    const exactDate = new Date();\n    if (date <= exactDate) {\n      Notiflix.Notify.failure('Invalid date, choose a date in the future');\n    }\n    else{\n      dispatch(updateSortedPastDueContactPhone({ phone: date, myUpdateId: idValue }));\n    }\n      setPhoneEdit(false);\n    \n    /*} else if (phoneValue.trim() === '') {\n      Notiflix.Notify.warning('Input is Empty or Incorrect');\n    }*/\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n  };\n \n  const handlePhoneEditClose = () => {\n    setPhoneEdit(false);\n  };\n  \n   const handleImageChange = e => {\n     const file = e.target.files[0];\n     const id = e.currentTarget.getAttribute('data-id');\n     //dispatch(updateAvatar({ avatar: file }));\n     //console.log({ avatar: file });\n     if (file) {\n       dispatch(updateSortedPastDueContactAvatar({ myFile: file, myId: id })); // Store the file under the key \"avatar\"\n     }\n   };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setEmailValue(myContact.email);\n  }, [myContact.email]);\n\n   useEffect(() => {\n     setNameValue(myContact.name);\n   }, [myContact.name]);\n  \n     useEffect(() => {\n       //setPhoneValue(myContact.phone);\n       /*const date = new Date(myContact.phone);\n\n       const formattedDate = date.toLocaleDateString('en-GB', {\n         year: 'numeric',\n         month: '2-digit',\n         day: '2-digit',\n       });\n       setDateValue(formattedDate)*/\n\n       const userLocale = navigator.language; // e.g., \"en-US\" or \"fr-FR\"\n       const myDate = new Date(myContact.phone);\n\n      const formatter = new Intl.DateTimeFormat(userLocale, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit', // Optional: include seconds\n        hour12: true, // Optional: use 12-hour clock (set to false for 24-hour clock)\n      });\n       setDateValue(formatter.format(myDate));\n        \n     }, [myContact.phone]);\n\n  //console.log(myVal);\n\n  return (\n    <div\n      className={clsx(css.coverWrapper, {\n        [css.contactsWrapperSpace]: isOpenModal,\n      })}\n    >\n      <b\n        className={clsx(css.notification, {\n          [css.notificationShow]: isLoading && !error,\n        })}\n      >\n        Please wait...\n      </b>\n\n      {error && (\n        <b className={css.notificationShow}>\n          There was an error, logout and login again!!!\n        </b>\n      )}\n      <div\n        className={clsx(css.contactsDetailsHide, {\n          [css.contactsDetailsShow]: isOpenModal,\n        })}\n      >\n        {isSlideLoading && (\n          <div className={css.backDrop}>\n            <ThreeCircles\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              color=\"#5785FF\"\n              radius=\"9\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClass={css.loader}\n            />\n          </div>\n        )}\n        <button className={css.closeModal} onClick={handleModalClose}>\n          <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n            <use href={`${svg}#icon-cross`}></use>\n          </svg>\n        </button>\n        <div className={css.detailsImageWrapper}>\n          <img\n            className={css.detailsImage}\n            src={`http://localhost:8000${myContact.avatarURL}`}\n            alt=\"Contact\"\n          />\n        </div>\n        <input\n          className={css.detailsImageButton}\n          type=\"file\"\n          accept=\"image/*\"\n          name=\"avatar\"\n          onChange={handleImageChange}\n          id=\"2\"\n          data-id={myContact._id}\n        />\n        <label className={css.detailsImageInput} htmlFor=\"2\">\n          Update Task Image +\n        </label>\n        <ul className={css.detailsWrapper}>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Task Title:</span>{' '}\n                {isNameEditing === false ? (\n                  <span className={css.detailsVal}>\n                    <i className={css.detail}>{myContact.name}</i>\n                  </span>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsValInput}\n                    required\n                    onChange={handleNameChange}\n                    data-id={myContact._id}\n                    name=\"username\"\n                    defaultValue={myContact.name}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isNameEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleNameEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isNameEditing === false ? (\n                  <button className={css.detailButton} onClick={handleNameEdit}>\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleNameSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Task Details:</span>{' '}\n                {isEmailEditing === false ? (\n                  <pre className={css.detailsDetailsVal}>\n                    <i className={css.detail}>{myContact.email}</i>\n                  </pre>\n                ) : (\n                  <textarea\n                    type=\"text\"\n                    className={css.detailsDetailsValInput}\n                    required\n                    onChange={handleEmailChange}\n                    data-id={myContact._id}\n                    name=\"email\"\n                    title=\"Enter the details of your task\"\n                    defaultValue={myContact.email}\n                  ></textarea>\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isEmailEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleEmailEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isEmailEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handleEmailEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleEmailSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Due Date:</span>{' '}\n                {isPhoneEditing === false ? (\n                  <span className={css.detailsValPhone}>\n                    <i className={css.detail}>{dateValue}</i>\n                  </span>\n                ) : (\n                  <Flatpickr\n                    data-enable-time\n                    value={date}\n                    onChange={selectedDates => {\n                      const nowDate = new Date();\n                      if (selectedDates[0] <= nowDate) {\n                        Notiflix.Notify.warning('Choose a date in the future');\n                      } else {\n                        Notiflix.Notify.success('Due Date Selected');\n                      }\n                      setDate(selectedDates[0]);\n                    }}\n                    options={{\n                      minuteIncrement: 1, // Set minute increments to 1\n                    }}\n                    render={({ defaultValue, ...props }, ref) => (\n                      <input\n                        {...props}\n                        ref={ref}\n                        className={css.detailsValInputPhone}\n                        required\n                        data-id={myContact._id}\n                        name=\"date\"\n                      />\n                    )}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isPhoneEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handlePhoneEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isPhoneEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handlePhoneEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handlePhoneSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n      <div\n        className={clsx(css.sortedWrapper, {\n          [css.selected]: isOpenModal,\n        })}\n      >\n        <TasksPastDueList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","export const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectIsKeyLoading = state => state.contacts.contacts.isKeyLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectOpenModal = state => state.contacts.contacts.openMyModal;\n\nexport const selectOpenSortedAllModal = state => state.contacts.contacts.openMyAllModal;\n\nexport const selectOpenSortedPendingModal = state => state.contacts.contacts.openMyPendingModal;\n\nexport const selectOpenSortedCompletedModal = state => state.contacts.contacts.openMyCompletedModal;\n\nexport const selectOpenSortedPastDueModal = state => state.contacts.contacts.openMyPastDueModal;\n\nexport const selectedContact = state => state.contacts.contacts.selectedContact;\n\nexport const selectedSortedAllContact = state => state.contacts.contacts.selectedSortedAllContact;\n\nexport const selectedSortedPendingContact = state => state.contacts.contacts.selectedSortedPendingContact;\n\nexport const selectedSortedCompletedContact = state => state.contacts.contacts.selectedSortedCompletedContact;\n\nexport const selectedSortedPastDueContact = state => state.contacts.contacts.selectedSortedPastDueContact;\n\nexport const selectedIsSlideLoading = state => state.contacts.contacts.isSlideLoading;\n\nexport const selectedIsSlideError = state => state.contacts.contacts.isSlideError;\n\nexport const selectFilterUp = state => state.contacts.contacts.filterUpLimit;\n\nexport const selectFilterDown = state => state.contacts.contacts.filterDownLimit;\n"],"names":["Filter","searchTermId","nanoid","contacts","useSelector","selectContacts","filterUpper","selectFilterUp","filterLower","selectFilterDown","filterValue","selectContactsFilter","dispatch","useDispatch","bestMatches","filter","contact","name","toLowerCase","includes","trim","handleModalOpen","evt","target","getAttribute","id","currentTarget","fetchContactById","openModal","handleDelete","style","boxShadow","setTimeout","deleteContact","_jsxs","className","css","children","htmlFor","_jsx","type","placeholder","pattern","title","required","onChange","event","setFilter","value","console","log","autoComplete","length","map","myindex","indexOf","_id","onClick","TasksPastDueList","_ref","filterDown","isLoading","selectIsLoading","error","selectError","fetchSortedPastDueContactById","openSortedPastDueModal","_useState","useState","_useState2","_slicedToArray","lowerLimit","setLowerLimit","_useState3","_useState4","upperLimit","setUpperLimit","handleBackward","handleChange","updateStatus","status","checked","myUpdateStatusId","pastDueRay","Date","phone","Contacts","date","setDate","isNameEditing","setNameEdit","_useState5","_useState6","nameValue","setNameValue","_useState7","_useState8","isEmailEditing","setEmailEdit","myContact","selectedSortedPastDueContact","_useState9","email","_useState10","emailValue","setEmailValue","_useState11","_useState12","isPhoneEditing","setPhoneEdit","_useState13","_useState14","dateValue","setDateValue","isSlideLoading","selectedIsSlideLoading","isOpenModal","selectOpenSortedPastDueModal","useEffect","fetchContacts","userLocale","navigator","language","myDate","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","clsx","_defineProperty","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","closeSortedPastDueModal","href","concat","svg","src","avatarURL","alt","accept","e","file","files","updateSortedPastDueContactAvatar","myFile","myId","nameRay","wrd","hasExceeded","_toConsumableArray","pop","join","Notiflix","defaultValue","document","querySelector","focus","idValue","updateSortedPastDueContactName","myUpdateId","updateSortedPastDueContactEmail","Flatpickr","selectedDates","nowDate","options","minuteIncrement","render","ref","props","_objectWithoutProperties","_excluded","_objectSpread","exactDate","updateSortedPastDueContactPhone","state","items","selectOpenModal","openMyModal","selectOpenSortedAllModal","openMyAllModal","selectOpenSortedPendingModal","openMyPendingModal","selectOpenSortedCompletedModal","openMyCompletedModal","openMyPastDueModal","selectedContact","selectedSortedAllContact","selectedSortedPendingContact","selectedSortedCompletedContact","filterUpLimit","filterDownLimit"],"sourceRoot":""}